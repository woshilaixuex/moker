// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	CourseController "github.com/moker/app/course/cmd/api/internal/handler/CourseController"
	"github.com/moker/app/course/cmd/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/courses",
				Handler: CourseController.GetCourseHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/course/search/:c_name",
				Handler: CourseController.GetSearchCourseHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/course/stu/ecourse/:stu_id",
				Handler: CourseController.GetECourseHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/course/stu/ecourse",
				Handler: CourseController.DeletSCourseHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/course/stu/addsc",
				Handler: CourseController.AddSCourseHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/course/tea/tc",
				Handler: CourseController.AddTCourseHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/course/tea/tc",
				Handler: CourseController.UpdateTCourseHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/course/tea/tc",
				Handler: CourseController.DeleteTCourseHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/course/tea/:tea_id",
				Handler: CourseController.GetTCourseHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.JwtAuth.AccessSecret),
		rest.WithPrefix("/moker/v1"),
	)
}
